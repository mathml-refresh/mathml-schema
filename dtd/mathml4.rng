<?xml version="1.0" encoding="UTF-8"?><grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns="http://relaxng.org/ns/structure/1.0">
  <!--
 start of mathml4-content.rng
-->
  
  <!--
 start of mathml4-strict-content.rng
-->
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
<define name="cn"><element name="cn.qname">
      <ref name="cn.attributes"/>
      <ref name="cn.content"/>
    </element></define><define name="ci"><element name="ci.qname">
      <ref name="ci.attributes"/>
      <ref name="ci.content"/>
    </element></define><define name="csymbol"><element name="csymbol.qname">
      <ref name="csymbol.attributes"/>
      <ref name="csymbol.content"/>
    </element></define><define name="SymbolName"><text/></define><define name="BvarQ"><zeroOrMore>
      <ref name="bvar"/>
    </zeroOrMore></define><define name="apply"><element name="apply.qname">
      <ref name="CommonAtt"/>
      <ref name="apply.content"/>
    </element></define><define name="bind"><element name="bind.qname">
      <ref name="CommonAtt"/>
      <ref name="bind.content"/>
    </element></define><define name="share"><element name="share.qname">
      <ref name="CommonAtt"/>
      <ref name="src"/>
      <empty/>
    </element></define><define name="cerror"><element name="cerror.qname">
      <ref name="cerror.attributes"/>
      <ref name="csymbol"/>
      <zeroOrMore>
        <ref name="ContExp"/>
      </zeroOrMore>
    </element></define><define name="cerror.attributes"><ref name="CommonAtt"/></define><define name="cbytes"><element name="cbytes.qname">
      <ref name="cbytes.attributes"/>
      <ref name="base64"/>
    </element></define><define name="base64"><data type="base64Binary"/></define><define name="cs"><element name="cs.qname">
      <ref name="cs.attributes"/>
      <text/>
    </element></define><!--
 end of mathml4-strict-content.rng
-->
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
<define name="cn.content"><zeroOrMore>
        <choice>
          <text/>
          <ref name="mglyph"/>
          <ref name="sep"/>
          <ref name="PresentationExpression"/>
        </choice>
      </zeroOrMore></define><define name="cn.attributes"><ref name="CommonAtt"/><ref name="DefEncAtt"/><optional>
        <attribute name="type"/>
      </optional><optional>
        <ref name="base"/>
      </optional></define><define name="ci.attributes"><ref name="CommonAtt"/><ref name="DefEncAtt"/><optional>
        <ref name="ci.type"/>
      </optional></define><define name="ci.type"><attribute name="type"/></define><define name="ci.content"><zeroOrMore>
        <choice>
          <text/>
          <ref name="mglyph"/>
          <ref name="PresentationExpression"/>
        </choice>
      </zeroOrMore></define><define name="csymbol.attributes"><ref name="CommonAtt"/><ref name="DefEncAtt"/><optional>
        <attribute name="type"/>
      </optional><optional>
        <ref name="cd"/>
      </optional></define><define name="csymbol.content"><zeroOrMore>
        <choice>
          <text/>
          <ref name="mglyph"/>
          <ref name="PresentationExpression"/>
        </choice>
      </zeroOrMore></define><define name="bvar"><element name="bvar.qname"><ref name="CommonAtt"/><choice><group><ref name="degree"/><choice><ref name="ci"/><ref name="semantics"/></choice></group><group><choice><ref name="ci"/><ref name="semantics"/></choice><optional><ref name="degree"/></optional></group></choice></element></define><define name="cbytes.attributes"><ref name="CommonAtt"/><ref name="DefEncAtt"/></define><define name="cs.attributes"><ref name="CommonAtt"/><ref name="DefEncAtt"/></define><define name="apply.content"><ref name="ContExp"/><group><ref name="BvarQ"/><zeroOrMore><ref name="Qualifier"/></zeroOrMore><zeroOrMore><ref name="ContExp"/></zeroOrMore></group></define><define name="bind.content"><ref name="apply.content"/></define><define name="base"><attribute name="base"/></define><define name="sep"><element name="sep.qname">
      <empty/>
    </element></define><define name="DomainQ"><zeroOrMore>
      <choice>
        <ref name="domainofapplication"/>
        <ref name="condition"/>
        
        <group>
          <ref name="lowlimit"/>
          <optional>
            <ref name="uplimit"/>
          </optional>
        </group>
      </choice>
    </zeroOrMore></define><define name="domainofapplication"><element name="domainofapplication.qname">
      <ref name="ContExp"/>
    </element></define><define name="condition"><element name="condition.qname">
      <ref name="ContExp"/>
    </element></define><define name="uplimit"><element name="uplimit.qname">
      <ref name="ContExp"/>
    </element></define><define name="lowlimit"><element name="lowlimit.qname">
      <ref name="ContExp"/>
    </element></define><define name="Qualifier"><choice>
      <ref name="DomainQ"/>
      <ref name="degree"/>
      <ref name="momentabout"/>
      <ref name="logbase"/>
    </choice></define><define name="degree"><element name="degree.qname">
      <ref name="ContExp"/>
    </element></define><define name="momentabout"><element name="momentabout.qname">
      <ref name="ContExp"/>
    </element></define><define name="logbase"><element name="logbase.qname">
      <ref name="ContExp"/>
    </element></define><define name="type"><attribute name="type"/></define><define name="order"><attribute name="order">
      <choice>
        <value>numeric</value>
        <value>lexicographic</value>
      </choice>
    </attribute></define><define name="closure"><attribute name="closure"/></define><define name="ContExp"><choice><ref name="piecewise"/><ref name="DeprecatedContExp"/><ref name="interval.class"/><ref name="unary-functional.class"/><ref name="lambda.class"/><ref name="nary-functional.class"/><ref name="binary-arith.class"/><ref name="unary-arith.class"/><ref name="nary-minmax.class"/><ref name="nary-arith.class"/><ref name="nary-logical.class"/><ref name="unary-logical.class"/><ref name="binary-logical.class"/><ref name="quantifier.class"/><ref name="nary-reln.class"/><ref name="binary-reln.class"/><ref name="int.class"/><ref name="Differential-Operator.class"/><ref name="partialdiff.class"/><ref name="unary-veccalc.class"/><ref name="nary-setlist-constructor.class"/><ref name="nary-set.class"/><ref name="binary-set.class"/><ref name="nary-set-reln.class"/><ref name="unary-set.class"/><ref name="sum.class"/><ref name="product.class"/><ref name="limit.class"/><ref name="unary-elementary.class"/><ref name="nary-stats.class"/><ref name="nary-constructor.class"/><ref name="unary-linalg.class"/><ref name="nary-linalg.class"/><ref name="binary-linalg.class"/><ref name="constant-set.class"/><ref name="constant-arith.class"/><ref name="semantics"/><ref name="cn"/><ref name="ci"/><ref name="csymbol"/><ref name="apply"/><ref name="bind"/><ref name="share"/><ref name="cerror"/><ref name="cbytes"/><ref name="cs"/></choice></define><define name="piecewise"><element name="piecewise.qname"><ref name="CommonAtt"/><ref name="DefEncAtt"/><zeroOrMore><choice><ref name="piece"/><ref name="otherwise"/></choice></zeroOrMore></element></define><define name="piece"><element name="piece.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <ref name="ContExp"/>
      <ref name="ContExp"/>
    </element></define><define name="otherwise"><element name="otherwise.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <ref name="ContExp"/>
    </element></define><define name="DeprecatedContExp"><choice>
      <ref name="reln"/>
      <ref name="fn"/>
      <ref name="declare"/>
    </choice></define><define name="reln"><element name="reln.qname">
      <zeroOrMore>
        <ref name="ContExp"/>
      </zeroOrMore>
    </element></define><define name="fn"><element name="fn.qname">
      <ref name="ContExp"/>
    </element></define><define name="declare"><element name="declare.qname">
      <optional>
        <attribute name="type">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="scope">
          <data type="string"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="nargs">
          <text/>
        </attribute>
      </optional>
      <optional>
        <attribute name="occurrence">
          <choice>
            <value>prefix</value>
            <value>infix</value>
            <value>function-model</value>
          </choice>
        </attribute>
      </optional>
      <ref name="DefEncAtt"/>
      <oneOrMore>
        <ref name="ContExp"/>
      </oneOrMore>
    </element></define><define name="interval.class"><ref name="interval"/></define><define name="interval"><element name="interval.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <optional>
        <ref name="closure"/>
      </optional>
      <ref name="ContExp"/>
      <ref name="ContExp"/>
    </element></define><define name="unary-functional.class"><choice>
      <ref name="inverse"/>
      <ref name="ident"/>
      <ref name="domain"/>
      <ref name="codomain"/>
      <ref name="image"/>
      <ref name="ln"/>
      <ref name="log"/>
      <ref name="moment"/>
    </choice></define><define name="inverse"><element name="inverse.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="ident"><element name="ident.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="domain"><element name="domain.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="codomain"><element name="codomain.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="image"><element name="image.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="ln"><element name="ln.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="log"><element name="log.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="moment"><element name="moment.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="lambda.class"><ref name="lambda"/></define><define name="lambda"><element name="lambda.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <ref name="BvarQ"/>
      <ref name="DomainQ"/>
      <ref name="ContExp"/>
    </element></define><define name="nary-functional.class"><ref name="compose"/></define><define name="compose"><element name="compose.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="binary-arith.class"><choice>
      <ref name="quotient"/>
      <ref name="divide"/>
      <ref name="minus"/>
      <ref name="power"/>
      <ref name="rem"/>
      <ref name="root"/>
    </choice></define><define name="quotient"><element name="quotient.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="divide"><element name="divide.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="minus"><element name="minus.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="power"><element name="power.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="rem"><element name="rem.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="root"><element name="root.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="unary-arith.class"><choice>
      <ref name="factorial"/>
      
      
      <ref name="abs"/>
      <ref name="conjugate"/>
      <ref name="arg"/>
      <ref name="real"/>
      <ref name="imaginary"/>
      <ref name="floor"/>
      <ref name="ceiling"/>
      <ref name="exp"/>
    </choice></define><define name="factorial"><element name="factorial.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="abs"><element name="abs.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="conjugate"><element name="conjugate.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arg"><element name="arg.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="real"><element name="real.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="imaginary"><element name="imaginary.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="floor"><element name="floor.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="ceiling"><element name="ceiling.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="exp"><element name="exp.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="nary-minmax.class"><choice>
      <ref name="max"/>
      <ref name="min"/>
    </choice></define><define name="max"><element name="max.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="min"><element name="min.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="nary-arith.class"><choice>
      <ref name="plus"/>
      <ref name="times"/>
      <ref name="gcd"/>
      <ref name="lcm"/>
    </choice></define><define name="plus"><element name="plus.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="times"><element name="times.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="gcd"><element name="gcd.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="lcm"><element name="lcm.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="nary-logical.class"><choice>
      <ref name="and"/>
      <ref name="or"/>
      <ref name="xor"/>
    </choice></define><define name="and"><element name="and.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="or"><element name="or.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="xor"><element name="xor.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="unary-logical.class"><ref name="not"/></define><define name="not"><element name="not.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="binary-logical.class"><choice>
      <ref name="implies"/>
      <ref name="equivalent"/>
    </choice></define><define name="implies"><element name="implies.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="equivalent"><element name="equivalent.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="quantifier.class"><choice>
      <ref name="forall"/>
      <ref name="exists"/>
    </choice></define><define name="forall"><element name="forall.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="exists"><element name="exists.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="nary-reln.class"><choice>
      <ref name="eq"/>
      <ref name="gt"/>
      <ref name="lt"/>
      <ref name="geq"/>
      <ref name="leq"/>
    </choice></define><define name="eq"><element name="eq.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="gt"><element name="gt.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="lt"><element name="lt.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="geq"><element name="geq.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="leq"><element name="leq.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="binary-reln.class"><choice>
      <ref name="neq"/>
      <ref name="approx"/>
      <ref name="factorof"/>
      <ref name="tendsto"/>
    </choice></define><define name="neq"><element name="neq.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="approx"><element name="approx.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="factorof"><element name="factorof.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="tendsto"><element name="tendsto.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <optional>
        <ref name="type"/>
      </optional>
      <empty/>
    </element></define><define name="int.class"><ref name="int"/></define><define name="int"><element name="int.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="Differential-Operator.class"><ref name="diff"/></define><define name="diff"><element name="diff.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="partialdiff.class"><ref name="partialdiff"/></define><define name="partialdiff"><element name="partialdiff.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="unary-veccalc.class"><choice>
      <ref name="divergence"/>
      <ref name="grad"/>
      <ref name="curl"/>
      <ref name="laplacian"/>
    </choice></define><define name="divergence"><element name="divergence.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="grad"><element name="grad.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="curl"><element name="curl.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="laplacian"><element name="laplacian.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="nary-setlist-constructor.class"><choice>
      <ref name="set"/>
      <ref name="list"/>
    </choice></define><define name="set"><element name="set.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <optional>
        <ref name="type"/>
      </optional>
      <zeroOrMore>
        <ref name="BvarQ"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="DomainQ"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="ContExp"/>
      </zeroOrMore>
    </element></define><define name="list"><element name="list.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <optional>
        <ref name="order"/>
      </optional>
      <zeroOrMore>
        <ref name="BvarQ"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="DomainQ"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="ContExp"/>
      </zeroOrMore>
    </element></define><define name="nary-set.class"><choice>
      <ref name="union"/>
      <ref name="intersect"/>
      <ref name="cartesianproduct"/>
    </choice></define><define name="union"><element name="union.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="intersect"><element name="intersect.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="cartesianproduct"><element name="cartesianproduct.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="binary-set.class"><choice>
      <ref name="in"/>
      <ref name="notin"/>
      <ref name="notsubset"/>
      <ref name="notprsubset"/>
      <ref name="setdiff"/>
    </choice></define><define name="in"><element name="in.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="notin"><element name="notin.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="notsubset"><element name="notsubset.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="notprsubset"><element name="notprsubset.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="setdiff"><element name="setdiff.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="nary-set-reln.class"><choice>
      <ref name="subset"/>
      <ref name="prsubset"/>
    </choice></define><define name="subset"><element name="subset.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="prsubset"><element name="prsubset.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="unary-set.class"><ref name="card"/></define><define name="card"><element name="card.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="sum.class"><ref name="sum"/></define><define name="sum"><element name="sum.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="product.class"><ref name="product"/></define><define name="product"><element name="product.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="limit.class"><ref name="limit"/></define><define name="limit"><element name="limit.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="unary-elementary.class"><choice>
      <ref name="sin"/>
      <ref name="cos"/>
      <ref name="tan"/>
      <ref name="sec"/>
      <ref name="csc"/>
      <ref name="cot"/>
      <ref name="sinh"/>
      <ref name="cosh"/>
      <ref name="tanh"/>
      <ref name="sech"/>
      <ref name="csch"/>
      <ref name="coth"/>
      <ref name="arcsin"/>
      <ref name="arccos"/>
      <ref name="arctan"/>
      <ref name="arccosh"/>
      <ref name="arccot"/>
      <ref name="arccoth"/>
      <ref name="arccsc"/>
      <ref name="arccsch"/>
      <ref name="arcsec"/>
      <ref name="arcsech"/>
      <ref name="arcsinh"/>
      <ref name="arctanh"/>
    </choice></define><define name="sin"><element name="sin.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="cos"><element name="cos.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="tan"><element name="tan.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="sec"><element name="sec.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="csc"><element name="csc.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="cot"><element name="cot.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="sinh"><element name="sinh.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="cosh"><element name="cosh.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="tanh"><element name="tanh.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="sech"><element name="sech.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="csch"><element name="csch.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="coth"><element name="coth.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arcsin"><element name="arcsin.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arccos"><element name="arccos.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arctan"><element name="arctan.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arccosh"><element name="arccosh.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arccot"><element name="arccot.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arccoth"><element name="arccoth.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arccsc"><element name="arccsc.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arccsch"><element name="arccsch.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arcsec"><element name="arcsec.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arcsech"><element name="arcsech.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arcsinh"><element name="arcsinh.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="arctanh"><element name="arctanh.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="nary-stats.class"><choice>
      <ref name="mean"/>
      <ref name="sdev"/>
      <ref name="variance"/>
      <ref name="median"/>
      <ref name="mode"/>
    </choice></define><define name="mean"><element name="mean.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="sdev"><element name="sdev.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="variance"><element name="variance.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="median"><element name="median.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="mode"><element name="mode.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="nary-constructor.class"><choice>
      <ref name="vector"/>
      <ref name="matrix"/>
      <ref name="matrixrow"/>
    </choice></define><define name="vector"><element name="vector.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <ref name="BvarQ"/>
      <ref name="DomainQ"/>
      <zeroOrMore>
        <ref name="ContExp"/>
      </zeroOrMore>
    </element></define><define name="matrix"><element name="matrix.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <ref name="BvarQ"/>
      <ref name="DomainQ"/>
      <zeroOrMore>
        <ref name="ContExp"/>
      </zeroOrMore>
    </element></define><define name="matrixrow"><element name="matrixrow.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <ref name="BvarQ"/>
      <ref name="DomainQ"/>
      <zeroOrMore>
        <ref name="ContExp"/>
      </zeroOrMore>
    </element></define><define name="unary-linalg.class"><choice>
      <ref name="determinant"/>
      <ref name="transpose"/>
    </choice></define><define name="determinant"><element name="determinant.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="transpose"><element name="transpose.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="nary-linalg.class"><ref name="selector"/></define><define name="selector"><element name="selector.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="binary-linalg.class"><choice>
      <ref name="vectorproduct"/>
      <ref name="scalarproduct"/>
      <ref name="outerproduct"/>
    </choice></define><define name="vectorproduct"><element name="vectorproduct.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="scalarproduct"><element name="scalarproduct.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="outerproduct"><element name="outerproduct.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="constant-set.class"><choice>
      <ref name="integers"/>
      <ref name="reals"/>
      <ref name="rationals"/>
      <ref name="naturalnumbers"/>
      <ref name="complexes"/>
      <ref name="primes"/>
      <ref name="emptyset"/>
    </choice></define><define name="integers"><element name="integers.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="reals"><element name="reals.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="rationals"><element name="rationals.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="naturalnumbers"><element name="naturalnumbers.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="complexes"><element name="complexes.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="primes"><element name="primes.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="emptyset"><element name="emptyset.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="constant-arith.class"><choice>
      <ref name="exponentiale"/>
      <ref name="imaginaryi"/>
      <ref name="notanumber"/>
      <ref name="true"/>
      <ref name="false"/>
      <ref name="pi"/>
      <ref name="eulergamma"/>
      <ref name="infinity"/>
    </choice></define><define name="exponentiale"><element name="exponentiale.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="imaginaryi"><element name="imaginaryi.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="notanumber"><element name="notanumber.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="true"><element name="true.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="false"><element name="false.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="pi"><element name="pi.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="eulergamma"><element name="eulergamma.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><define name="infinity"><element name="infinity.qname">
      <ref name="CommonAtt"/>
      <ref name="DefEncAtt"/>
      <empty/>
    </element></define><!--
 end of mathml4-content.rng
-->
  <!--
 start of mathml4-presentation.rng
-->
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
<define name="ImpliedMrow"><zeroOrMore>
      <ref name="MathExpression"/>
    </zeroOrMore></define><define name="TableRowExpression"><choice>
      <ref name="mtr"/>
      <ref name="mlabeledtr"/>
    </choice></define><define name="TableCellExpression"><ref name="mtd"/></define><define name="MstackExpression"><choice>
      <ref name="MathExpression"/>
      <ref name="mscarries"/>
      <ref name="msline"/>
      <ref name="msrow"/>
      <ref name="msgroup"/>
    </choice></define><define name="MsrowExpression"><choice>
      <ref name="MathExpression"/>
      <ref name="none"/>
    </choice></define><define name="MultiScriptExpression"><choice>
      <ref name="MathExpression"/>
      <ref name="none"/>
    </choice><choice>
      <ref name="MathExpression"/>
      <ref name="none"/>
    </choice></define><define name="mpadded-length"><data type="string">
      
    </data></define><define name="linestyle"><choice>
      <value>none</value>
      <value>solid</value>
      <value>dashed</value>
    </choice></define><define name="verticalalign"><choice>
      <value>top</value>
      <value>bottom</value>
      <value>center</value>
      <value>baseline</value>
      <value>axis</value>
    </choice></define><define name="columnalignstyle"><choice>
      <value>left</value>
      <value>center</value>
      <value>right</value>
    </choice></define><define name="notationstyle"><choice>
      <value>longdiv</value>
      <value>actuarial</value>
      <value>radical</value>
      <value>box</value>
      <value>roundedbox</value>
      <value>circle</value>
      <value>left</value>
      <value>right</value>
      <value>top</value>
      <value>bottom</value>
      <value>updiagonalstrike</value>
      <value>downdiagonalstrike</value>
      <value>verticalstrike</value>
      <value>horizontalstrike</value>
      <value>madruwb</value>
    </choice></define><define name="idref"><text/></define><define name="unsigned-integer"><data type="unsignedLong"/></define><define name="integer"><data type="integer"/></define><define name="number"><data type="decimal"/></define><define name="character"><data type="string">
      
    </data></define><define name="color"><data type="string">
      
    </data></define><define name="group-alignment"><choice>
      <value>left</value>
      <value>center</value>
      <value>right</value>
      <value>decimalpoint</value>
    </choice></define><define name="group-alignment-list"><text/></define><define name="group-alignment-list-list"><text/></define><define name="positive-integer"><data type="positiveInteger"/></define><define name="TokenExpression"><choice>
      <ref name="mi"/>
      <ref name="mn"/>
      <ref name="mo"/>
      <ref name="mtext"/>
      <ref name="mspace"/>
      <ref name="ms"/>
    </choice></define><define name="token.content"><choice>
      <ref name="mglyph"/>
      <ref name="malignmark"/>
      <text/>
    </choice></define><define name="mi"><element name="mi.qname">
      <ref name="mi.attributes"/>
      <zeroOrMore>
        <ref name="token.content"/>
      </zeroOrMore>
    </element></define><define name="mi.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><ref name="TokenAtt"/></define><define name="mn"><element name="mn.qname">
      <ref name="mn.attributes"/>
      <zeroOrMore>
        <ref name="token.content"/>
      </zeroOrMore>
    </element></define><define name="mn.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><ref name="TokenAtt"/></define><define name="mo"><element name="mo.qname">
      <ref name="mo.attributes"/>
      <zeroOrMore>
        <ref name="token.content"/>
      </zeroOrMore>
    </element></define><define name="mo.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><ref name="TokenAtt"/><optional>
      <attribute name="form">
        <choice>
          <value>prefix</value>
          <value>infix</value>
          <value>postfix</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="fence">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="separator">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="lspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="rspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="stretchy">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="symmetric">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="maxsize">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="minsize">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="largeop">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="movablelimits">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="accent">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="linebreak">
        <choice>
          <value>auto</value>
          <value>newline</value>
          <value>nobreak</value>
          <value>goodbreak</value>
          <value>badbreak</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="lineleading">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="linebreakstyle">
        <choice>
          <value>before</value>
          <value>after</value>
          <value>duplicate</value>
          <value>infixlinebreakstyle</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="linebreakmultchar"/>
    </optional><optional>
      <attribute name="indentalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>auto</value>
          <value>id</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentshift">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="indenttarget">
        <ref name="idref"/>
      </attribute>
    </optional><optional>
      <attribute name="indentalignfirst">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>auto</value>
          <value>id</value>
          <value>indentalign</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentshiftfirst">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="indentalignlast">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>auto</value>
          <value>id</value>
          <value>indentalign</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentshiftlast">
        <text/>
      </attribute>
    </optional></define><define name="mtext"><element name="mtext.qname">
      <ref name="mtext.attributes"/>
      <zeroOrMore>
        <ref name="token.content"/>
      </zeroOrMore>
    </element></define><define name="mtext.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><ref name="TokenAtt"/></define><define name="mspace"><element name="mspace.qname">
      <ref name="mspace.attributes"/>
      <empty/>
    </element></define><define name="mspace.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><ref name="TokenAtt"/><optional>
      <attribute name="width">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="height">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="depth">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="linebreak">
        <choice>
          <value>auto</value>
          <value>newline</value>
          <value>nobreak</value>
          <value>goodbreak</value>
          <value>badbreak</value>
          <value>indentingnewline</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>auto</value>
          <value>id</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentshift">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="indenttarget">
        <ref name="idref"/>
      </attribute>
    </optional><optional>
      <attribute name="indentalignfirst">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>auto</value>
          <value>id</value>
          <value>indentalign</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentshiftfirst">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="indentalignlast">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>auto</value>
          <value>id</value>
          <value>indentalign</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentshiftlast">
        <text/>
      </attribute>
    </optional></define><define name="ms"><element name="ms.qname">
      <ref name="ms.attributes"/>
      <zeroOrMore>
        <ref name="token.content"/>
      </zeroOrMore>
    </element></define><define name="ms.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><ref name="TokenAtt"/><optional>
      <attribute name="lquote"/>
    </optional><optional>
      <attribute name="rquote"/>
    </optional></define><define name="mglyph"><element name="mglyph.qname">
      <ref name="mglyph.attributes"/>
      <ref name="mglyph.deprecatedattributes"/>
      <empty/>
    </element></define><define name="mglyph.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="src">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="width">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="height">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="valign">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="alt"/>
    </optional></define><define name="mglyph.deprecatedattributes"><optional>
      <attribute name="index">
        <ref name="integer"/>
      </attribute>
    </optional><optional>
      <attribute name="mathvariant">
        <choice>
          <value>normal</value>
          <value>bold</value>
          <value>italic</value>
          <value>bold-italic</value>
          <value>double-struck</value>
          <value>bold-fraktur</value>
          <value>script</value>
          <value>bold-script</value>
          <value>fraktur</value>
          <value>sans-serif</value>
          <value>bold-sans-serif</value>
          <value>sans-serif-italic</value>
          <value>sans-serif-bold-italic</value>
          <value>monospace</value>
          <value>initial</value>
          <value>tailed</value>
          <value>looped</value>
          <value>stretched</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="mathsize">
        <text/>
      </attribute>
    </optional><ref name="DeprecatedTokenAtt"/></define><define name="msline"><element name="msline.qname">
      <ref name="msline.attributes"/>
      <empty/>
    </element></define><define name="msline.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="position">
        <ref name="integer"/>
      </attribute>
    </optional><optional>
      <attribute name="length">
        <ref name="unsigned-integer"/>
      </attribute>
    </optional><optional>
      <attribute name="leftoverhang">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="rightoverhang">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="mslinethickness">
        <text/>
      </attribute>
    </optional></define><define name="none"><element name="none.qname">
      <ref name="none.attributes"/>
      <empty/>
    </element></define><define name="none.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/></define><define name="mprescripts"><element name="mprescripts.qname">
      <ref name="mprescripts.attributes"/>
      <empty/>
    </element></define><define name="mprescripts.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/></define><define name="CommonPresAtt"><optional>
      <attribute name="mathcolor">
        <ref name="color"/>
      </attribute>
    </optional><optional>
      <attribute name="mathbackground">
        <text/>
      </attribute>
    </optional></define><define name="TokenAtt"><optional>
      <attribute name="mathvariant">
        <choice>
          <value>normal</value>
          <value>bold</value>
          <value>italic</value>
          <value>bold-italic</value>
          <value>double-struck</value>
          <value>bold-fraktur</value>
          <value>script</value>
          <value>bold-script</value>
          <value>fraktur</value>
          <value>sans-serif</value>
          <value>bold-sans-serif</value>
          <value>sans-serif-italic</value>
          <value>sans-serif-bold-italic</value>
          <value>monospace</value>
          <value>initial</value>
          <value>tailed</value>
          <value>looped</value>
          <value>stretched</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="mathsize">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="dir">
        <choice>
          <value>ltr</value>
          <value>rtl</value>
        </choice>
      </attribute>
    </optional><ref name="DeprecatedTokenAtt"/></define><define name="DeprecatedTokenAtt"><optional>
      <attribute name="fontfamily"/>
    </optional><optional>
      <attribute name="fontweight">
        <choice>
          <value>normal</value>
          <value>bold</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="fontstyle">
        <choice>
          <value>normal</value>
          <value>italic</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="fontsize">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="color">
        <ref name="color"/>
      </attribute>
    </optional><optional>
      <attribute name="background">
        <text/>
      </attribute>
    </optional></define><define name="MalignExpression"><choice>
      <ref name="maligngroup"/>
      <ref name="malignmark"/>
    </choice></define><define name="malignmark"><element name="malignmark.qname">
      <ref name="malignmark.attributes"/>
      <empty/>
    </element></define><define name="malignmark.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="edge">
        <choice>
          <value>left</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional></define><define name="maligngroup"><element name="maligngroup.qname">
      <ref name="maligngroup.attributes"/>
      <empty/>
    </element></define><define name="maligngroup.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="groupalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>decimalpoint</value>
        </choice>
      </attribute>
    </optional></define><define name="PresentationExpression"><choice>
      <ref name="TokenExpression"/>
      <ref name="MalignExpression"/>
      <ref name="mrow"/>
      <ref name="mfrac"/>
      <ref name="msqrt"/>
      <ref name="mroot"/>
      <ref name="mstyle"/>
      <ref name="merror"/>
      <ref name="mpadded"/>
      <ref name="mphantom"/>
      <ref name="mfenced"/>
      <ref name="menclose"/>
      <ref name="msub"/>
      <ref name="msup"/>
      <ref name="msubsup"/>
      <ref name="munder"/>
      <ref name="mover"/>
      <ref name="munderover"/>
      <ref name="mmultiscripts"/>
      <ref name="mtable"/>
      <ref name="mstack"/>
      <ref name="mlongdiv"/>
      <ref name="maction"/>
    </choice></define><define name="mrow"><element name="mrow.qname">
      <ref name="mrow.attributes"/>
      <zeroOrMore>
        <ref name="MathExpression"/>
      </zeroOrMore>
    </element></define><define name="mrow.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="dir">
        <choice>
          <value>ltr</value>
          <value>rtl</value>
        </choice>
      </attribute>
    </optional></define><define name="mfrac"><element name="mfrac.qname">
      <ref name="mfrac.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element></define><define name="mfrac.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="linethickness">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="numalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="denomalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="bevelled">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional></define><define name="msqrt"><element name="msqrt.qname">
      <ref name="msqrt.attributes"/>
      <ref name="ImpliedMrow"/>
    </element></define><define name="msqrt.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/></define><define name="mroot"><element name="mroot.qname">
      <ref name="mroot.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element></define><define name="mroot.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/></define><define name="mstyle"><element name="mstyle.qname">
      <ref name="mstyle.attributes"/>
      <ref name="ImpliedMrow"/>
    </element></define><define name="mstyle.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><ref name="mstyle.specificattributes"/><ref name="mstyle.generalattributes"/><ref name="mstyle.deprecatedattributes"/></define><define name="mstyle.specificattributes"><optional>
      <attribute name="scriptlevel">
        <ref name="integer"/>
      </attribute>
    </optional><optional>
      <attribute name="displaystyle">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="scriptsizemultiplier">
        <ref name="number"/>
      </attribute>
    </optional><optional>
      <attribute name="scriptminsize">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="infixlinebreakstyle">
        <choice>
          <value>before</value>
          <value>after</value>
          <value>duplicate</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="decimalpoint">
        <ref name="character"/>
      </attribute>
    </optional></define><define name="mstyle.generalattributes"><optional>
      <attribute name="accent">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="accentunder">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="align">
        <choice>
          <value>left</value>
          <value>right</value>
          <value>center</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="alignmentscope">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="bevelled">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="charalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="charspacing">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="close"/>
    </optional><optional>
      <attribute name="columnalign">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="columnlines">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="columnspacing">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="columnspan">
        <ref name="positive-integer"/>
      </attribute>
    </optional><optional>
      <attribute name="columnwidth">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="crossout">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="denomalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="depth">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="dir">
        <choice>
          <value>ltr</value>
          <value>rtl</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="edge">
        <choice>
          <value>left</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="equalcolumns">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="equalrows">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="fence">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="form">
        <choice>
          <value>prefix</value>
          <value>infix</value>
          <value>postfix</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="frame">
        <ref name="linestyle"/>
      </attribute>
    </optional><optional>
      <attribute name="framespacing">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="groupalign">
        <ref name="group-alignment-list-list"/>
      </attribute>
    </optional><optional>
      <attribute name="height">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="indentalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>auto</value>
          <value>id</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentalignfirst">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>auto</value>
          <value>id</value>
          <value>indentalign</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentalignlast">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>auto</value>
          <value>id</value>
          <value>indentalign</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="indentshift">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="indentshiftfirst">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="indentshiftlast">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="indenttarget">
        <ref name="idref"/>
      </attribute>
    </optional><optional>
      <attribute name="largeop">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="leftoverhang">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="length">
        <ref name="unsigned-integer"/>
      </attribute>
    </optional><optional>
      <attribute name="linebreak">
        <choice>
          <value>auto</value>
          <value>newline</value>
          <value>nobreak</value>
          <value>goodbreak</value>
          <value>badbreak</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="linebreakmultchar"/>
    </optional><optional>
      <attribute name="linebreakstyle">
        <choice>
          <value>before</value>
          <value>after</value>
          <value>duplicate</value>
          <value>infixlinebreakstyle</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="lineleading">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="linethickness">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="location">
        <choice>
          <value>w</value>
          <value>nw</value>
          <value>n</value>
          <value>ne</value>
          <value>e</value>
          <value>se</value>
          <value>s</value>
          <value>sw</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="longdivstyle">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="lquote"/>
    </optional><optional>
      <attribute name="lspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="mathsize">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="mathvariant">
        <choice>
          <value>normal</value>
          <value>bold</value>
          <value>italic</value>
          <value>bold-italic</value>
          <value>double-struck</value>
          <value>bold-fraktur</value>
          <value>script</value>
          <value>bold-script</value>
          <value>fraktur</value>
          <value>sans-serif</value>
          <value>bold-sans-serif</value>
          <value>sans-serif-italic</value>
          <value>sans-serif-bold-italic</value>
          <value>monospace</value>
          <value>initial</value>
          <value>tailed</value>
          <value>looped</value>
          <value>stretched</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="maxsize">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="minlabelspacing">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="minsize">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="movablelimits">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="mslinethickness">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="notation"/>
    </optional><optional>
      <attribute name="numalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="open"/>
    </optional><optional>
      <attribute name="position">
        <ref name="integer"/>
      </attribute>
    </optional><optional>
      <attribute name="rightoverhang">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="rowalign">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="rowlines">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="rowspacing">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="rowspan">
        <ref name="positive-integer"/>
      </attribute>
    </optional><optional>
      <attribute name="rquote"/>
    </optional><optional>
      <attribute name="rspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="selection">
        <ref name="positive-integer"/>
      </attribute>
    </optional><optional>
      <attribute name="separator">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="separators"/>
    </optional><optional>
      <attribute name="shift">
        <ref name="integer"/>
      </attribute>
    </optional><optional>
      <attribute name="side">
        <choice>
          <value>left</value>
          <value>right</value>
          <value>leftoverlap</value>
          <value>rightoverlap</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="stackalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>decimalpoint</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="stretchy">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="subscriptshift">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="superscriptshift">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="symmetric">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="valign">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="width">
        <ref name="length"/>
      </attribute>
    </optional></define><define name="mstyle.deprecatedattributes"><ref name="DeprecatedTokenAtt"/><optional>
      <attribute name="veryverythinmathspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="verythinmathspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="thinmathspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="mediummathspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="thickmathspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="verythickmathspace">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="veryverythickmathspace">
        <ref name="length"/>
      </attribute>
    </optional></define><define name="merror"><element name="merror.qname">
      <ref name="merror.attributes"/>
      <ref name="ImpliedMrow"/>
    </element></define><define name="merror.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/></define><define name="mpadded"><element name="mpadded.qname">
      <ref name="mpadded.attributes"/>
      <ref name="ImpliedMrow"/>
    </element></define><define name="mpadded.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="height">
        <ref name="mpadded-length"/>
      </attribute>
    </optional><optional>
      <attribute name="depth">
        <ref name="mpadded-length"/>
      </attribute>
    </optional><optional>
      <attribute name="width">
        <ref name="mpadded-length"/>
      </attribute>
    </optional><optional>
      <attribute name="lspace">
        <ref name="mpadded-length"/>
      </attribute>
    </optional><optional>
      <attribute name="voffset">
        <ref name="mpadded-length"/>
      </attribute>
    </optional></define><define name="mphantom"><element name="mphantom.qname">
      <ref name="mphantom.attributes"/>
      <ref name="ImpliedMrow"/>
    </element></define><define name="mphantom.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/></define><define name="mfenced"><element name="mfenced.qname">
      <ref name="mfenced.attributes"/>
      <zeroOrMore>
        <ref name="MathExpression"/>
      </zeroOrMore>
    </element></define><define name="mfenced.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="open"/>
    </optional><optional>
      <attribute name="close"/>
    </optional><optional>
      <attribute name="separators"/>
    </optional></define><define name="menclose"><element name="menclose.qname">
      <ref name="menclose.attributes"/>
      <ref name="ImpliedMrow"/>
    </element></define><define name="menclose.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="notation"/>
    </optional></define><define name="msub"><element name="msub.qname">
      <ref name="msub.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element></define><define name="msub.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="subscriptshift">
        <ref name="length"/>
      </attribute>
    </optional></define><define name="msup"><element name="msup.qname">
      <ref name="msup.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element></define><define name="msup.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="superscriptshift">
        <ref name="length"/>
      </attribute>
    </optional></define><define name="msubsup"><element name="msubsup.qname">
      <ref name="msubsup.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element></define><define name="msubsup.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="subscriptshift">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="superscriptshift">
        <ref name="length"/>
      </attribute>
    </optional></define><define name="munder"><element name="munder.qname">
      <ref name="munder.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element></define><define name="munder.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="accentunder">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="align">
        <choice>
          <value>left</value>
          <value>right</value>
          <value>center</value>
        </choice>
      </attribute>
    </optional></define><define name="mover"><element name="mover.qname">
      <ref name="mover.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element></define><define name="mover.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="accent">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="align">
        <choice>
          <value>left</value>
          <value>right</value>
          <value>center</value>
        </choice>
      </attribute>
    </optional></define><define name="munderover"><element name="munderover.qname">
      <ref name="munderover.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element></define><define name="munderover.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="accent">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="accentunder">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="align">
        <choice>
          <value>left</value>
          <value>right</value>
          <value>center</value>
        </choice>
      </attribute>
    </optional></define><define name="mmultiscripts"><element name="mmultiscripts.qname">
      <ref name="mmultiscripts.attributes"/>
      <ref name="MathExpression"/>
      <zeroOrMore>
        <ref name="MultiScriptExpression"/>
      </zeroOrMore>
      <optional>
        <ref name="mprescripts"/>
        <zeroOrMore>
          <ref name="MultiScriptExpression"/>
        </zeroOrMore>
      </optional>
    </element></define><define name="mmultiscripts.attributes"><ref name="msubsup.attributes"/></define><define name="mtable"><element name="mtable.qname">
      <ref name="mtable.attributes"/>
      <zeroOrMore>
        <ref name="TableRowExpression"/>
      </zeroOrMore>
    </element></define><define name="mtable.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="align">
        <data type="string">
          
        </data>
      </attribute>
    </optional><optional>
      <attribute name="rowalign">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="columnalign">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="groupalign">
        <ref name="group-alignment-list-list"/>
      </attribute>
    </optional><optional>
      <attribute name="alignmentscope">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="columnwidth">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="width">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="rowspacing">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="columnspacing">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="rowlines">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="columnlines">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="frame">
        <ref name="linestyle"/>
      </attribute>
    </optional><optional>
      <attribute name="framespacing">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="equalrows">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="equalcolumns">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="displaystyle">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="side">
        <choice>
          <value>left</value>
          <value>right</value>
          <value>leftoverlap</value>
          <value>rightoverlap</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="minlabelspacing">
        <ref name="length"/>
      </attribute>
    </optional></define><define name="mlabeledtr"><element name="mlabeledtr.qname">
      <ref name="mlabeledtr.attributes"/>
      <oneOrMore>
        <ref name="TableCellExpression"/>
      </oneOrMore>
    </element></define><define name="mlabeledtr.attributes"><ref name="mtr.attributes"/></define><define name="mtr"><element name="mtr.qname">
      <ref name="mtr.attributes"/>
      <zeroOrMore>
        <ref name="TableCellExpression"/>
      </zeroOrMore>
    </element></define><define name="mtr.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="rowalign">
        <choice>
          <value>top</value>
          <value>bottom</value>
          <value>center</value>
          <value>baseline</value>
          <value>axis</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="columnalign">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="groupalign">
        <ref name="group-alignment-list-list"/>
      </attribute>
    </optional></define><define name="mtd"><element name="mtd.qname">
      <ref name="mtd.attributes"/>
      <ref name="ImpliedMrow"/>
    </element></define><define name="mtd.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="rowspan">
        <ref name="positive-integer"/>
      </attribute>
    </optional><optional>
      <attribute name="columnspan">
        <ref name="positive-integer"/>
      </attribute>
    </optional><optional>
      <attribute name="rowalign">
        <choice>
          <value>top</value>
          <value>bottom</value>
          <value>center</value>
          <value>baseline</value>
          <value>axis</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="columnalign">
        <ref name="columnalignstyle"/>
      </attribute>
    </optional><optional>
      <attribute name="groupalign">
        <ref name="group-alignment-list"/>
      </attribute>
    </optional></define><define name="mstack"><element name="mstack.qname">
      <ref name="mstack.attributes"/>
      <zeroOrMore>
        <ref name="MstackExpression"/>
      </zeroOrMore>
    </element></define><define name="mstack.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="align">
        <data type="string">
          
        </data>
      </attribute>
    </optional><optional>
      <attribute name="stackalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
          <value>decimalpoint</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="charalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="charspacing">
        <text/>
      </attribute>
    </optional></define><define name="mlongdiv"><element name="mlongdiv.qname">
      <ref name="mlongdiv.attributes"/>
      <ref name="MstackExpression"/>
      <ref name="MstackExpression"/>
      <oneOrMore>
        <ref name="MstackExpression"/>
      </oneOrMore>
    </element></define><define name="mlongdiv.attributes"><ref name="msgroup.attributes"/><optional>
      <attribute name="longdivstyle">
        <text/>
      </attribute>
    </optional></define><define name="msgroup"><element name="msgroup.qname">
      <ref name="msgroup.attributes"/>
      <zeroOrMore>
        <ref name="MstackExpression"/>
      </zeroOrMore>
    </element></define><define name="msgroup.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="position">
        <ref name="integer"/>
      </attribute>
    </optional><optional>
      <attribute name="shift">
        <ref name="integer"/>
      </attribute>
    </optional></define><define name="msrow"><element name="msrow.qname">
      <ref name="msrow.attributes"/>
      <zeroOrMore>
        <ref name="MsrowExpression"/>
      </zeroOrMore>
    </element></define><define name="msrow.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="position">
        <ref name="integer"/>
      </attribute>
    </optional></define><define name="mscarries"><element name="mscarries.qname">
      <ref name="mscarries.attributes"/>
      <zeroOrMore>
        <choice>
          <ref name="MsrowExpression"/>
          <ref name="mscarry"/>
        </choice>
      </zeroOrMore>
    </element></define><define name="mscarries.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="position">
        <ref name="integer"/>
      </attribute>
    </optional><optional>
      <attribute name="location">
        <choice>
          <value>w</value>
          <value>nw</value>
          <value>n</value>
          <value>ne</value>
          <value>e</value>
          <value>se</value>
          <value>s</value>
          <value>sw</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="crossout">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="scriptsizemultiplier">
        <ref name="number"/>
      </attribute>
    </optional></define><define name="mscarry"><element name="mscarry.qname">
      <ref name="mscarry.attributes"/>
      <zeroOrMore>
        <ref name="MsrowExpression"/>
      </zeroOrMore>
    </element></define><define name="mscarry.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><optional>
      <attribute name="location">
        <choice>
          <value>w</value>
          <value>nw</value>
          <value>n</value>
          <value>ne</value>
          <value>e</value>
          <value>se</value>
          <value>s</value>
          <value>sw</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="crossout">
        <text/>
      </attribute>
    </optional></define><define name="maction"><element name="maction.qname">
      <ref name="maction.attributes"/>
      <oneOrMore>
        <ref name="MathExpression"/>
      </oneOrMore>
    </element></define><define name="maction.attributes"><ref name="CommonAtt"/><ref name="CommonPresAtt"/><attribute name="actiontype"/><optional>
      <attribute name="selection">
        <ref name="positive-integer"/>
      </attribute>
    </optional></define><!--
 end of mathml4-presentation.rng
-->
  <!--
 start of mathml4-common.rng
-->
  <start>
    <ref name="math"/>
  </start>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
<define name="math"><element name="math.qname">
      <ref name="math.attributes"/>
      <zeroOrMore>
        <ref name="MathExpression"/>
      </zeroOrMore>
    </element></define><define name="NonMathMLAtt"><notAllowed/></define><define name="CommonDeprecatedAtt"><optional>
      <attribute name="other"/>
    </optional></define><define name="CommonAtt"><optional>
      <attribute name="id">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="xref"/>
    </optional><optional>
      <attribute name="class">
        <text/>
      </attribute>
    </optional><optional>
      <attribute name="style">
        <data type="string"/>
      </attribute>
    </optional><optional>
      <attribute name="href">
        <text/>
      </attribute>
    </optional><ref name="CommonDeprecatedAtt"/></define><define name="math.attributes"><ref name="CommonAtt"/><optional>
      <attribute name="display">
        <choice>
          <value>block</value>
          <value>inline</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="maxwidth">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="overflow">
        <choice>
          <value>linebreak</value>
          <value>scroll</value>
          <value>elide</value>
          <value>truncate</value>
          <value>scale</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="altimg">
        <data type="anyURI"/>
      </attribute>
    </optional><optional>
      <attribute name="altimg-width">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="altimg-height">
        <ref name="length"/>
      </attribute>
    </optional><optional>
      <attribute name="altimg-valign">
        <choice>
          <ref name="length"/>
          <value>top</value>
          <value>middle</value>
          <value>bottom</value>
        </choice>
      </attribute>
    </optional><optional>
      <attribute name="alttext"/>
    </optional><optional>
      <attribute name="cdgroup">
        <data type="anyURI"/>
      </attribute>
    </optional><ref name="math.deprecatedattributes"/><ref name="CommonPresAtt"/><ref name="mstyle.specificattributes"/><ref name="mstyle.generalattributes"/></define><define name="math.deprecatedattributes"><optional>
      <attribute name="mode">
        <data type="string"/>
      </attribute>
    </optional><optional>
      <attribute name="macros">
        <data type="string"/>
      </attribute>
    </optional></define><define name="name"><attribute name="name">
      <text/>
    </attribute></define><define name="cd"><attribute name="cd">
      <text/>
    </attribute></define><define name="src"><optional>
      <attribute name="src">
        <text/>
      </attribute>
    </optional></define><define name="annotation"><element name="annotation.qname">
      <ref name="annotation.attributes"/>
      <text/>
    </element></define><define name="annotation-xml.model"><zeroOrMore>
      <choice>
        <ref name="MathExpression"/>
        
      </choice>
    </zeroOrMore></define><define name="anyElement"><notAllowed/></define><define name="annotation-xml"><element name="annotation-xml.qname">
      <ref name="annotation.attributes"/>
      <ref name="annotation-xml.model"/>
    </element></define><define name="annotation.attributes"><ref name="CommonAtt"/><optional>
      <ref name="cd"/>
    </optional><optional>
      <ref name="name"/>
    </optional><ref name="DefEncAtt"/><optional>
      <ref name="src"/>
    </optional></define><define name="DefEncAtt"><optional>
      <attribute name="encoding">
        <data type="string"/>
      </attribute>
    </optional><optional>
      <attribute name="definitionURL">
        <text/>
      </attribute>
    </optional></define><define name="semantics"><element name="semantics.qname">
      <ref name="semantics.attributes"/>
      <ref name="MathExpression"/>
      <zeroOrMore>
        <choice>
          <ref name="annotation"/>
          <ref name="annotation-xml"/>
        </choice>
      </zeroOrMore>
    </element></define><define name="semantics.attributes"><ref name="CommonAtt"/><ref name="DefEncAtt"/><optional>
      <ref name="cd"/>
    </optional><optional>
      <ref name="name"/>
    </optional></define><define name="length"><data type="string">
      
    </data></define><!--
 end of mathml4-common.rng
-->

<define name="MathExpression"><choice><ref name="ContExp"/><ref name="PresentationExpression"/></choice></define>
</grammar>