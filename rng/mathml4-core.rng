<?xml version="1.0" encoding="UTF-8"?>
<!-- mathml4-core -->
<grammar ns="http://www.w3.org/1998/Math/MathML" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <start>
    <ref name="math"/>
  </start>
  <define name="math">
    <element name="math">
      <ref name="math.attributes"/>
      <zeroOrMore>
        <ref name="MathExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="CommonAtt">
    <optional>
      <attribute name="id">
        <data type="ID"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="xref"/>
    </optional>
    <optional>
      <attribute name="class">
        <data type="NMTOKENS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="style">
        <data type="string"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="href">
        <data type="anyURI"/>
      </attribute>
    </optional>
  </define>
  <define name="math.attributes">
    <ref name="CommonAtt"/>
    <optional>
      <attribute name="display">
        <choice>
          <value>block</value>
          <value>inline</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <!--
        attribute maxwidth {length}?,
        attribute overflow {"linebreak" | "scroll" | "elide" | "truncate" | "scale"}?,
      -->
      <attribute name="altimg">
        <data type="anyURI"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="altimg-width">
        <ref name="length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="altimg-height">
        <ref name="length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="altimg-valign">
        <choice>
          <ref name="length"/>
          <value>top</value>
          <value>middle</value>
          <value>bottom</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="alttext"/>
    </optional>
  </define>
  <define name="annotation">
    <element name="annotation">
      <ref name="CommonAtt"/>
      <choice>
        <ref name="src"/>
        <text/>
      </choice>
    </element>
  </define>
  <define name="anyElement">
    <element>
      <anyName>
        <except>
          <nsName/>
        </except>
      </anyName>
      <zeroOrMore>
        <choice>
          <attribute>
            <anyName/>
          </attribute>
          <text/>
          <ref name="anyElement"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="annotation-xml">
    <element name="annotation-xml">
      <ref name="CommonAtt"/>
      <optional>
        <ref name="encoding"/>
      </optional>
      <choice>
        <ref name="src"/>
        <zeroOrMore>
          <ref name="MathExpression"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="anyElement"/>
        </zeroOrMore>
      </choice>
    </element>
  </define>
  <define name="encoding">
    <attribute name="encoding">
      <data type="string"/>
    </attribute>
  </define>
  <define name="src">
    <attribute name="src">
      <data type="string"/>
    </attribute>
  </define>
  <define name="semantics">
    <element name="semantics">
      <ref name="CommonAtt"/>
      <ref name="MathExpression"/>
      <zeroOrMore>
        <choice>
          <ref name="annotation"/>
          <ref name="annotation-xml"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="length">
    <data type="string">
      <param name="pattern">\s*((-?[0-9]*([0-9]\.?|\.[0-9])[0-9]*(e[mx]|in|cm|mm|p[xtc]|%)?)|(negative)?((very){0,2}thi(n|ck)|medium)mathspace)\s*</param>
    </data>
  </define>
  <define name="MathExpression">
    <a:documentation>mathml3-presentation, simplified</a:documentation>
    <choice>
      <ref name="TokenExpression"/>
      <ref name="mrow"/>
      <ref name="mfrac"/>
      <ref name="msqrt"/>
      <ref name="mroot"/>
      <ref name="mstyle"/>
      <ref name="merror"/>
      <ref name="mpadded"/>
      <ref name="mphantom"/>
      <ref name="menclose"/>
      <ref name="msub"/>
      <ref name="msup"/>
      <ref name="msubsup"/>
      <ref name="munder"/>
      <ref name="mover"/>
      <ref name="munderover"/>
      <ref name="mmultiscripts"/>
      <ref name="mtable"/>
      <ref name="maction"/>
    </choice>
  </define>
  <define name="ImpliedMrow">
    <zeroOrMore>
      <ref name="MathExpression"/>
    </zeroOrMore>
  </define>
  <define name="TableRowExpression">
    <choice>
      <ref name="mtr"/>
      <ref name="mlabeledtr"/>
    </choice>
  </define>
  <define name="MultiScriptExpression">
    <choice>
      <ref name="MathExpression"/>
      <ref name="none"/>
    </choice>
    <choice>
      <ref name="MathExpression"/>
      <ref name="none"/>
    </choice>
  </define>
  <define name="mpadded-length">
    <data type="string">
      <param name="pattern">\s*([\+\-]?[0-9]*([0-9]\.?|\.[0-9])[0-9]*\s*((%?\s*(height|depth|width)?)|e[mx]|in|cm|mm|p[xtc]|((negative)?((very){0,2}thi(n|ck)|medium)mathspace))?)\s*</param>
    </data>
  </define>
  <define name="linestyle">
    <choice>
      <value>none</value>
      <value>solid</value>
      <value>dashed</value>
    </choice>
  </define>
  <define name="verticalalign">
    <choice>
      <value>top</value>
      <value>bottom</value>
      <value>center</value>
      <value>baseline</value>
      <value>axis</value>
    </choice>
  </define>
  <define name="columnalignstyle">
    <choice>
      <value>left</value>
      <value>center</value>
      <value>right</value>
    </choice>
  </define>
  <define name="notationstyle">
    <choice>
      <value>longdiv</value>
      <value>actuarial</value>
      <value>radical</value>
      <value>box</value>
      <value>roundedbox</value>
      <value>circle</value>
      <value>left</value>
      <value>right</value>
      <value>top</value>
      <value>bottom</value>
      <value>updiagonalstrike</value>
      <value>downdiagonalstrike</value>
      <value>verticalstrike</value>
      <value>horizontalstrike</value>
      <value>madruwb</value>
    </choice>
  </define>
  <define name="idref">
    <text/>
  </define>
  <define name="color">
    <data type="string">
      <param name="pattern">\s*((#[0-9a-fA-F]{3}([0-9a-fA-F]{3})?)|[aA][qQ][uU][aA]|[bB][lL][aA][cC][kK]|[bB][lL][uU][eE]|[fF][uU][cC][hH][sS][iI][aA]|[gG][rR][aA][yY]|[gG][rR][eE][eE][nN]|[lL][iI][mM][eE]|[mM][aA][rR][oO][oO][nN]|[nN][aA][vV][yY]|[oO][lL][iI][vV][eE]|[pP][uU][rR][pP][lL][eE]|[rR][eE][dD]|[sS][iI][lL][vV][eE][rR]|[tT][eE][aA][lL]|[wW][hH][iI][tT][eE]|[yY][eE][lL][lL][oO][wW])\s*</param>
    </data>
  </define>
  <define name="TokenExpression">
    <choice>
      <ref name="mi"/>
      <ref name="mn"/>
      <ref name="mo"/>
      <ref name="mtext"/>
      <ref name="mspace"/>
      <ref name="ms"/>
    </choice>
  </define>
  <define name="mi">
    <element name="mi">
      <ref name="mi.attributes"/>
      <text/>
    </element>
  </define>
  <define name="mi.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <ref name="TokenAtt"/>
  </define>
  <define name="mn">
    <element name="mn">
      <ref name="mn.attributes"/>
      <text/>
    </element>
  </define>
  <define name="mn.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <ref name="TokenAtt"/>
  </define>
  <define name="mo">
    <element name="mo">
      <ref name="mo.attributes"/>
      <text/>
    </element>
  </define>
  <define name="mo.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <ref name="TokenAtt"/>
    <optional>
      <attribute name="form">
        <choice>
          <value>prefix</value>
          <value>infix</value>
          <value>postfix</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="fence">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="separator">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="lspace">
        <ref name="length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="rspace">
        <ref name="length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="stretchy">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="symmetric">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <!--
        attribute maxsize {length | "infinity"}?,
        attribute minsize {length}?,
      -->
      <attribute name="largeop">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="movablelimits">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="accent">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <!-- attribute linebreak {"auto" | "newline" | "nobreak" | "goodbreak" | "badbreak"}? -->
  <define name="mtext">
    <element name="mtext">
      <ref name="mtext.attributes"/>
      <text/>
    </element>
  </define>
  <define name="mtext.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <ref name="TokenAtt"/>
  </define>
  <define name="mspace">
    <element name="mspace">
      <ref name="mspace.attributes"/>
      <empty/>
    </element>
  </define>
  <define name="mspace.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <ref name="TokenAtt"/>
    <optional>
      <attribute name="width">
        <ref name="length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="height">
        <ref name="length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="depth">
        <ref name="length"/>
      </attribute>
    </optional>
  </define>
  <define name="ms">
    <element name="ms">
      <ref name="ms.attributes"/>
      <text/>
    </element>
  </define>
  <define name="ms.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <ref name="TokenAtt"/>
    <optional>
      <attribute name="lquote"/>
    </optional>
    <optional>
      <attribute name="rquote"/>
    </optional>
  </define>
  <define name="msline">
    <element name="msline">
      <ref name="msline.attributes"/>
      <empty/>
    </element>
  </define>
  <define name="msline.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="position">
        <data type="integer"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="length">
        <data type="positiveInteger"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="leftoverhang">
        <ref name="length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="rightoverhang">
        <ref name="length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="mslinethickness">
        <choice>
          <ref name="length"/>
          <value>thin</value>
          <value>medium</value>
          <value>thick</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="none">
    <element name="none">
      <ref name="none.attributes"/>
      <empty/>
    </element>
  </define>
  <define name="none.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
  </define>
  <define name="mprescripts">
    <element name="mprescripts">
      <ref name="mprescripts.attributes"/>
      <empty/>
    </element>
  </define>
  <define name="mprescripts.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
  </define>
  <define name="CommonPresAtt">
    <optional>
      <attribute name="mathcolor">
        <ref name="color"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="mathbackground">
        <choice>
          <ref name="color"/>
          <value>transparent</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="TokenAtt">
    <optional>
      <attribute name="mathvariant">
        <choice>
          <value>normal</value>
          <value>bold</value>
          <value>italic</value>
          <value>bold-italic</value>
          <value>double-struck</value>
          <value>bold-fraktur</value>
          <value>script</value>
          <value>bold-script</value>
          <value>fraktur</value>
          <value>sans-serif</value>
          <value>bold-sans-serif</value>
          <value>sans-serif-italic</value>
          <value>sans-serif-bold-italic</value>
          <value>monospace</value>
          <value>initial</value>
          <value>tailed</value>
          <value>looped</value>
          <value>stretched</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="mathsize">
        <choice>
          <value>small</value>
          <value>normal</value>
          <value>big</value>
          <ref name="length"/>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="dir">
        <choice>
          <value>ltr</value>
          <value>rtl</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="mrow">
    <element name="mrow">
      <ref name="mrow.attributes"/>
      <zeroOrMore>
        <ref name="MathExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="mrow.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="dir">
        <choice>
          <value>ltr</value>
          <value>rtl</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="mfrac">
    <element name="mfrac">
      <ref name="mfrac.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element>
  </define>
  <define name="mfrac.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="linethickness">
        <choice>
          <ref name="length"/>
          <value>thin</value>
          <value>medium</value>
          <value>thick</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="numalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="denomalign">
        <choice>
          <value>left</value>
          <value>center</value>
          <value>right</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="bevelled">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="msqrt">
    <element name="msqrt">
      <ref name="msqrt.attributes"/>
      <ref name="ImpliedMrow"/>
    </element>
  </define>
  <define name="msqrt.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
  </define>
  <define name="mroot">
    <element name="mroot">
      <ref name="mroot.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element>
  </define>
  <define name="mroot.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
  </define>
  <define name="mstyle">
    <element name="mstyle">
      <ref name="mstyle.attributes"/>
      <ref name="ImpliedMrow"/>
    </element>
  </define>
  <define name="mstyle.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="scriptlevel">
        <data type="integer"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="displaystyle">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="scriptsizemultiplier">
        <data type="decimal"/>
      </attribute>
    </optional>
  </define>
  <define name="math.attributes" combine="interleave">
    <ref name="CommonPresAtt"/>
  </define>
  <define name="math.attributes" combine="interleave">
    <ref name="mstyle.attributes"/>
  </define>
  <define name="merror">
    <element name="merror">
      <ref name="merror.attributes"/>
      <ref name="ImpliedMrow"/>
    </element>
  </define>
  <define name="merror.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
  </define>
  <define name="mpadded">
    <element name="mpadded">
      <ref name="mpadded.attributes"/>
      <ref name="ImpliedMrow"/>
    </element>
  </define>
  <define name="mpadded.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="height">
        <ref name="mpadded-length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="depth">
        <ref name="mpadded-length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="width">
        <ref name="mpadded-length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="lspace">
        <ref name="mpadded-length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="voffset">
        <ref name="mpadded-length"/>
      </attribute>
    </optional>
  </define>
  <define name="mphantom">
    <element name="mphantom">
      <ref name="mphantom.attributes"/>
      <ref name="ImpliedMrow"/>
    </element>
  </define>
  <define name="mphantom.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
  </define>
  <define name="menclose">
    <element name="menclose">
      <ref name="menclose.attributes"/>
      <ref name="ImpliedMrow"/>
    </element>
  </define>
  <define name="menclose.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="notation">
        <ref name="notationstyle"/>
      </attribute>
    </optional>
  </define>
  <define name="msub">
    <element name="msub">
      <ref name="msub.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element>
  </define>
  <define name="msub.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="subscriptshift">
        <ref name="length"/>
      </attribute>
    </optional>
  </define>
  <define name="msup">
    <element name="msup">
      <ref name="msup.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element>
  </define>
  <define name="msup.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="superscriptshift">
        <ref name="length"/>
      </attribute>
    </optional>
  </define>
  <define name="msubsup">
    <element name="msubsup">
      <ref name="msubsup.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element>
  </define>
  <define name="msubsup.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="subscriptshift">
        <ref name="length"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="superscriptshift">
        <ref name="length"/>
      </attribute>
    </optional>
  </define>
  <define name="munder">
    <element name="munder">
      <ref name="munder.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element>
  </define>
  <define name="munder.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="accentunder">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="align">
        <choice>
          <value>left</value>
          <value>right</value>
          <value>center</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="mover">
    <element name="mover">
      <ref name="mover.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element>
  </define>
  <define name="mover.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="accent">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="align">
        <choice>
          <value>left</value>
          <value>right</value>
          <value>center</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="munderover">
    <element name="munderover">
      <ref name="munderover.attributes"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
      <ref name="MathExpression"/>
    </element>
  </define>
  <define name="munderover.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="accent">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="accentunder">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="align">
        <choice>
          <value>left</value>
          <value>right</value>
          <value>center</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="mmultiscripts">
    <element name="mmultiscripts">
      <ref name="mmultiscripts.attributes"/>
      <ref name="MathExpression"/>
      <zeroOrMore>
        <ref name="MultiScriptExpression"/>
      </zeroOrMore>
      <optional>
        <ref name="mprescripts"/>
        <zeroOrMore>
          <ref name="MultiScriptExpression"/>
        </zeroOrMore>
      </optional>
    </element>
  </define>
  <define name="mmultiscripts.attributes">
    <ref name="msubsup.attributes"/>
  </define>
  <define name="mtable">
    <element name="mtable">
      <ref name="mtable.attributes"/>
      <zeroOrMore>
        <ref name="TableRowExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="mtable.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="frame">
        <ref name="linestyle"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="displaystyle">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="mlabeledtr">
    <element name="mlabeledtr">
      <ref name="mlabeledtr.attributes"/>
      <oneOrMore>
        <ref name="mtd"/>
      </oneOrMore>
    </element>
  </define>
  <define name="mlabeledtr.attributes">
    <ref name="mtr.attributes"/>
  </define>
  <define name="mtr">
    <element name="mtr">
      <ref name="mtr.attributes"/>
      <zeroOrMore>
        <ref name="mtd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="mtr.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="rowalign">
        <choice>
          <value>top</value>
          <value>bottom</value>
          <value>center</value>
          <value>baseline</value>
          <value>axis</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="mtd">
    <element name="mtd">
      <ref name="mtd.attributes"/>
      <ref name="ImpliedMrow"/>
    </element>
  </define>
  <define name="mtd.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <optional>
      <attribute name="rowspan">
        <data type="positiveInteger"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="columnspan">
        <data type="positiveInteger"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="rowalign">
        <choice>
          <value>top</value>
          <value>bottom</value>
          <value>center</value>
          <value>baseline</value>
          <value>axis</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="columnalign">
        <ref name="columnalignstyle"/>
      </attribute>
    </optional>
  </define>
  <define name="maction">
    <element name="maction">
      <ref name="maction.attributes"/>
      <oneOrMore>
        <ref name="MathExpression"/>
      </oneOrMore>
    </element>
  </define>
  <define name="maction.attributes">
    <ref name="CommonAtt"/>
    <ref name="CommonPresAtt"/>
    <attribute name="actiontype"/>
    <optional>
      <attribute name="selection">
        <data type="positiveInteger"/>
      </attribute>
    </optional>
  </define>
</grammar>
